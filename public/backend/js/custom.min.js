jQuery(window).on("load", function () {
    // $("#preloader").fadeOut(500);
    // $("#main-wrapper").addClass("show");
    // if($('body').attr('data-sidebar-position') === "fixed") {
    //     $('.quixnav-scroll').slimscroll({
    //         position: "right",
    //         size: "5px",
    //         height: "100%",
    //         color: "transparent"
    //     });
    // }
});

(function ($) {
    "use strict";

    $("#menu").metisMenu();

    // $(function() {
    //     AOS.init({
    //         duration: 1500,
    //         easing: 'ease-in-out',
    //     });
    // });

    $("#checkAll").change(function () {
        $("td input:checkbox").prop("checked", $(this).prop("checked"));
    });

    // $('.sidebar-right-inner').slimscroll({
    //     // position: "left",
    //     size: "5px",
    //     height: "100%",
    //     color: "#c6c8c9"
    // });

    $(".nav-control").on("click", function () {
        $("#main-wrapper").toggleClass("menu-toggle");

        $(".hamburger").toggleClass("is-active");
    });

    //to keep the current page active
    $(function () {
        for (
            var nk = window.location,
                o = $("ul#menu a")
                    .filter(function () {
                        return this.href == nk;
                    })
                    .addClass("mm-active")
                    .parent()
                    .addClass("mm-active");
            ;

        ) {
            if (!o.is("li")) break;
            o = o.parent().addClass("mm-show").parent().addClass("mm-active");
        }

        // Change aria-expanded attribute for elements with class mm-active
        $("ul#menu .mm-active")
            .find(".has-arrow")
            .attr("aria-expanded", "true");

        $("ul#menu>li").on("click", function () {
            const sidebarStyle = $("body").attr("data-sidebar-style");
            if (sidebarStyle === "mini") {
                console.log($(this).find("ul"));
                $(this).find("ul").stop();
            }
        });
    });

    // Toggle the menu on button click
    //    $(".nav-control").on('click', function () {
    //        $('#main-wrapper').toggleClass("menu-toggle");
    //        $(".hamburger").toggleClass("is-active");
    //    });
    //
    //    // Handle submenu clicks
    //    $("ul#menu>li").on('click', function () {
    //        const sidebarStyle = $('body').attr('data-sidebar-style');
    //        if (sidebarStyle === 'mini') {
    //            // Toggle the submenu when an item is clicked
    //            $(this).find('.submenu').stop().slideToggle();
    //        }
    //    });

    $(function () {
        // var win_w = window.outerWidth;
        var win_h = window.outerHeight;
        var win_h = window.outerHeight;
        if (win_h > 0 ? win_h : screen.height) {
            $(".content-body").css("min-height", win_h + 60 + "px");
        }
    });

    $('a[data-action="collapse"]').on("click", function (i) {
        i.preventDefault(),
            $(this)
                .closest(".card")
                .find('[data-action="collapse"] i')
                .toggleClass("mdi-arrow-down mdi-arrow-up"),
            $(this).closest(".card").children(".card-body").collapse("toggle");
    });

    $('a[data-action="expand"]').on("click", function (i) {
        i.preventDefault(),
            $(this)
                .closest(".card")
                .find('[data-action="expand"] i')
                .toggleClass("icon-size-actual icon-size-fullscreen"),
            $(this).closest(".card").toggleClass("card-fullscreen");
    });

    $('[data-action="close"]').on("click", function () {
        $(this).closest(".card").removeClass().slideUp("fast");
    });

    $('[data-action="reload"]').on("click", function () {
        var e = $(this);
        e.parents(".card").addClass("card-load"),
            e
                .parents(".card")
                .append(
                    '<div class="card-loader"><i class=" ti-reload rotate-refresh"></div>'
                ),
            setTimeout(function () {
                e.parents(".card").children(".card-loader").remove(),
                    e.parents(".card").removeClass("card-load");
            }, 2000);
    });

    const headerHight = $(".header").innerHeight();

    $(window).scroll(function () {
        if (
            $("body").attr("data-layout") === "horizontal" &&
            $("body").attr("data-header-position") === "static" &&
            $("body").attr("data-sidebar-position") === "fixed"
        )
            $(this.window).scrollTop() >= headerHight
                ? $(".quixnav").addClass("fixed")
                : $(".quixnav").removeClass("fixed");
    });

    // $('.sidebar-right-trigger').on('click', function() {
    //     $('.sidebar-right').toggleClass('show');
    // });

    /* ==================================================
			# Select Style
		 ===============================================*/

    // Iterate over each select element
    $(".select-style-1").each(function () {
        // Cache the number of options
        var $this = $(this),
            numberOfOptions = $(this).children("option").length;

        // Hides the select element
        $this.addClass("s-hidden");

        // Wrap the select element in a div
        $this.wrap('<div class="select"></div>');

        // Insert a styled div to sit over the top of the hidden select element
        $this.after('<div class="styledSelect"></div>');

        // Cache the styled div
        var $styledSelect = $this.next("div.styledSelect");

        // Show the first select option in the styled div
        $styledSelect.text($this.children("option").eq(0).text());

        // Insert an unordered list after the styled div and also cache the list
        var $list = $("<ul />", {
            class: "options",
        }).insertAfter($styledSelect);

        // Insert a list item into the unordered list for each select option
        for (var i = 0; i < numberOfOptions; i++) {
            $("<li />", {
                text: $this.children("option").eq(i).text(),
                rel: $this.children("option").eq(i).val(),
            }).appendTo($list);
        }

        // Cache the list items
        var $listItems = $list.children("li");

        // Show the unordered list when the styled div is clicked (also hides it if the div is clicked again)
        //    $styledSelect.click(function (e) {
        //        e.stopPropagation();
        //        $('div.styledSelect.active').each(function () {
        //            $(this).removeClass('active').next('ul.options').hide();
        //        });
        //        $(this).toggleClass('active').next('ul.options').toggle();
        //    });

        // Show the unordered list when the styled div is clicked (also hides it if the div is clicked again)
        $styledSelect.click(function (e) {
            e.stopPropagation();
            // Check if the styled select already has the "active" class
            if ($(this).hasClass("active")) {
                $(this).removeClass("active").next("ul.options").hide();
            } else {
                // If it doesn't have the class, remove it from other elements and show the options
                $("div.styledSelect.active").each(function () {
                    $(this).removeClass("active").next("ul.options").hide();
                });
                $(this).addClass("active").next("ul.options").show();
            }
        });

        // Hides the unordered list when a list item is clicked and updates the styled div to show the selected list item
        // Updates the select element to have the value of the equivalent option
        $listItems.click(function (e) {
            e.stopPropagation();
            $styledSelect.text($(this).text()).removeClass("active");
            $this.val($(this).attr("rel"));
            $list.hide();
            /* alert($this.val()); Uncomment this for demonstration! */
        });

        // Hides the unordered list when clicking outside of it
        $(document).click(function () {
            $styledSelect.removeClass("active");
            $list.hide();
        });
    });

    /* ==================================================
			# RTL mode
		 =============================================== */

    const bodyEl = document.querySelector("body");
    const btnEl = document.querySelector(".rtl-mode");
    if (btnEl) {
<<<<<<< HEAD

        btnEl.addEventListener(
            "click",
            () => {
                const dir = bodyEl.getAttribute("dir") === "ltr" ? "rtl" : "ltr";
=======
        btnEl.addEventListener(
            "click",
            () => {
                const dir =
                    bodyEl.getAttribute("dir") === "ltr" ? "rtl" : "ltr";
>>>>>>> origin/master
                bodyEl.setAttribute("dir", dir);
            },
            false
        );
<<<<<<< HEAD
        
=======
>>>>>>> origin/master
    }

    // Menu Toggle Responsive
    function addMenuToggleClass() {
        if ($(window).width() <= 1199) {
            $("#main-wrapper").addClass("menu-toggle");
            $("body").attr("data-sidebar-style", "full");
        } else {
            $("#main-wrapper").removeClass("menu-toggle");
        }
    }

    // Initial call to set the class on page load
    addMenuToggleClass();

    // Add class on window resize
    $(window).on("resize", function () {
        addMenuToggleClass();
    });
})(jQuery);

const qs = new PerfectScrollbar(".quixnav-scroll");
// const sr = new PerfectScrollbar('.sidebar-right-inner');

//plugin bootstrap minus and plus
$(".btn-number").on("click", function (e) {
    e.preventDefault();

    fieldName = $(this).attr("data-field");
    type = $(this).attr("data-type");
    var input = $("input[name='" + fieldName + "']");
    var currentVal = parseInt(input.val());
    if (!isNaN(currentVal)) {
        if (type == "minus") input.val(currentVal - 1);
        else if (type == "plus") input.val(currentVal + 1);
    } else {
        input.val(0);
    }
});
